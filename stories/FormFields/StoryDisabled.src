const { renderField, renderTextArea, renderRadios, renderSingleCheckbox, renderSelect, renderCheckboxs, renderAddAnother, renderPhoto, renderTimezone, renderTags } = FormFields;

const validate = (values) => {
    const errors = {};

    if (!values.title) {
        errors.title = 'Required';
    }

    return errors;
};

class Forms extends React.Component{
    render() {
        const { handleSubmit, pristine, submitting, pubTypes, patentsStatus, initialValues, intl, pageAll } = this.props;

        return (
            <form
            >
                    <Field
                        name="IsActive_b"
                        type="checkbox"
                        option={'Active Project'}
                        className="active-checkbox"
                        component={renderSingleCheckbox}
                        disabled
                    />

                    <Field
                        name="FacitProjName_txt"
                        type="text"
                        className="title-box"
                        component={renderField}
                        label={'Project Title:'}
                        placeholder=""
                        required
                        disabled
                    />
                    <Field
                        name="FacitDevelStage_txt"
                        type="select"
                        className="dev-stage"
                        component={renderSelect}
                        label={'Development Stage:'}
                        options={['-- Select an Option --', 'A', 'B']}
                        disabled
                    />
                    <Field
                        name="TechProgram_list"
                        type="checkbox"
                        component={renderCheckboxs}
                        options={['OptionA', 'OptionB', 'OptionC']}
                        label={'Technology Program(s):'}
                        required
                        disabled
                    />
                    <Field
                        name="StrategicInitiative_list"
                        type="checkbox"
                        component={renderRadios}
                        options={['OptionA', 'OptionB', 'OptionC']}
                        label={'Strategic Initiative(s):'}
                        disabled
                    />
                    <Field
                        name="ScientificSummary_txt"
                        type="textarea"
                        label={'Technology Description:'}
                        component={renderTextArea}
                        help={'"Read More" after 250 characters'}
                        placeholder="Placeholder"
                        disabled
                    />
                    <Field
                        name="photo"
                        label={'Choose Photo Field'}
                        component={renderPhoto}
                        disabled
                    />
                    <Field
                        name="timezone"
                        placeholder={'Choose timezone'}
                        label={'Timezone Field'}
                        component={renderTimezone}
                        disabled
                    />
                    <Field
                        name="tags"
                        label={'Tags'}
                        component={renderTags}
                        withContext
                        disabled
                    />
                    <FieldArray
                        name="Contact_list"
                        type="select"
                        component={renderAddAnother}
                        label={'Scientific Leader/Contact(s):'}
                        childComponent={contact => (
                            <div>
                                <Field
                                    name={`${contact}.FirstName_txt`}
                                    type="text"
                                    component={renderField}
                                    label={'First Name:'}
                                    placeholder=""
                                    disabled
                                />
                                <Field
                                    name={`${contact}.LastName_txt`}
                                    type="text"
                                    component={renderField}
                                    label={'Last Name'}
                                    placeholder=""
                                    required
                                    disabled
                                />
                                <Field
                                    name={`${contact}.Role_txt`}
                                    type="text"
                                    component={renderField}
                                    label={'Role:'}
                                    placeholder=""
                                    disabled
                                />
                                <Field
                                    name={`${contact}.Institution_txt`}
                                    type="text"
                                    component={renderField}
                                    label={'Lead Research Institute:'}
                                    placeholder=""
                                    disabled
                                />
                                <Field
                                    name={`${contact}.Email_txt`}
                                    type="email"
                                    component={renderField}
                                    label={'Email Address:'}
                                    placeholder=""
                                    disabled
                                />
                            </div>
                        )}
                        disabled
                    />
            </form>
        )
    }
}

const FormsReduxForm = reduxForm({
    form: 'test',
    validate,
    initialValues: {
        timezone: '(GMT-11:00) Niue',
        tags: ['test', 'test2'],
        Contact_list: [
            {
                FirstName_txt: 'Test',
                LastName_txt: 'Test',
                Role_txt: 'Test',
                Institution_txt: 'Test'
            }
        ]
    }
})(Forms);

const example = (
    <Provider store={store}>
        <FormsReduxForm />
    </Provider>
);
return example;