// Make sure to set data('parentView') on the dropdown with the dropdown's 
// parent view when the parent view is rendered
WFUIJS.BB.setDropdownHandler = function(ddClassName, selector, handler) {
	WFUIJS.$(function() {
		WFUIJS.$('body').on('click', '.wfui-dropdown2.'+ddClassName+' '+selector+':not([aria-disabled])', function() {
			var parentView = WFUIJS.$(this).parents('.wfui-dropdown2').data('parentView');
			// 'handler' may be either a function directly passed in, or a string
			// containing the name of a property on the parent view whose value
			// is a function
			if (!_.isFunction(handler)) {
				handler = parentView[handler];
			}
			handler.apply(parentView);
		});
	});
};

// Take a WFUI dropdown generated from a template and wire it up with unique
// IDs so that it works
WFUIJS.BB.makeButtonDropdownUnique = function($button, id) {
	$button.attr('aria-owns', id);
	$button.attr('aria-controls', id);
	$button.siblings('.wfui-dropdown2').attr('id', id);
}

// makeButtonDropdownUnique + set the parent view
WFUIJS.BB.initDropdown = function($dd, parentView) {
	// Assume that the immediately preceding el is the trigger. Fair to assume
	// since this is how the markup is generated by wfui.
	var $trigger = $dd.prev();

	WFUIJS.BB.makeButtonDropdownUnique($trigger, WFUIJS.id('dd'));
	$dd.data('parentView', parentView);
}